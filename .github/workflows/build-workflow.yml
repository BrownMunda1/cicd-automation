name: build-workflow
run-name: Build Workflow

on:
  push:

permissions:
    contents: read

jobs:
    build:
        name: "Python Build"
        runs-on: ubuntu-latest

        steps:
        -   id: checkout
            name: Checkout
            uses: actions/checkout@v5
            with:
                fetch-depth: 0

        -   id: setup-python
            name: Set up Python 3.12
            uses: actions/setup-python@v5
            with:
                python-version: "3.12.x"

        -   id: display-version
            name: Display Python version
            run: python -c "import sys; print(sys.version)"

        -   id: setup-uv
            uses: astral-sh/setup-uv@v6
            with:
                version: "latest"

        -   id: display-uv-version
            name: Display uv version
            run: uv --version

        -   id: uv-build
            name: uv virtual environment, build and install
            run: |
                echo "Running uv sync for installing all packages in virutal environment from pyproject.toml file"
                uv sync

                echo "Falling back to requirements.txt if not present in pyproject.toml"
                uv add -r requirements.txt

                echo "Running uv build for creating whl files"
                uv build

        -   id: get-changed-files
            name: Get Changed Files
            run: |
                temp=$(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}")
                
                MONOREPO1=false
                MONOREPO2=false
                for FILE in $temp; do
                    if [[ "$FILE" == src/monorepo1/* ]]; then
                        MONOREPO1=true
                    elif [[ "$FILE" == src/monorepo2/* ]]; then
                        MONOREPO2=true
                    fi
                done

                echo "Is Monorepo1 Changed? $MONOREPO1"
                echo "Is Monorepo2 Changed? $MONOREPO2"

                # echo "declare -p temp:"
                # declare -p temp || true

                # mapfile -t files < <(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}")
                # echo "declare -p files:"
                # declare -p files
                # echo "files count: ${#files[@]}"
